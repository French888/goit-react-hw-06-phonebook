{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","redux/app/app-selectors.js","redux/app/app-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","App.js","redux/app/app-reducer.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","addContact","createAction","number","payload","id","uuid","deleteContact","changeFilter","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","onSubmit","e","preventDefault","namesIsIn","reduce","acc","contact","numbersIsIn","alert","contactCheck","appActions","className","s","form","label","input","type","value","pattern","title","placeholder","onChange","currentTarget","ContactList","list","map","item","text","onClick","actions","onDeleteContact","Container","children","container","Filter","event","target","App","totalContactsCount","length","createReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c0a287b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const addContact = createAction(\"app/add\", (name, number) => ({\n  payload: {\n    id: uuid(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction(\"app/delete\");\n\nexport const changeFilter = createAction(\"app/changeFilter\");\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/app/app-selectors\";\nimport * as appActions from \"../../redux/app/app-actions\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) =>\n    dispatch(appActions.addContact(name, number));\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contactCheck = () => {\n    const namesIsIn = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      []\n    );\n    const numbersIsIn = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      []\n    );\n\n    if (namesIsIn.includes(name) || numbersIsIn.includes(number)) {\n      alert(`${name}${number} is already in contacts`);\n    }\n\n    if (name === \"\" || number === \"\") {\n      alert(\"Enter all data, please\");\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setName(\"\");\n    setNumber(\"\");\n    if (contactCheck()) {\n      return;\n    }\n\n    onSubmit(name, number);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name:\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Jack Sparrow\"\n          onChange={(e) => setName(e.currentTarget.value)}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number:\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          placeholder=\"111-11-11\"\n          onChange={(e) => setNumber(e.currentTarget.value)}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/app/app-actions\";\nimport { getVisibleContacts } from \"../../redux/app/app-selectors\";\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = (id) => dispatch(actions.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <p className={s.text}>\n            {name}: {number}\n          </p>\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/app/app-selectors\";\nimport * as actions from \"../../redux/app/app-actions\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const change = (event) => dispatch(actions.changeFilter(event.target.value));\n\n  return (\n    <label>\n      Find contacts by name:\n      <input className={s.input} type=\"text\" value={value} onChange={change} />\n    </label>\n  );\n}\n\nexport default Filter;\n","// import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Container from \"./components/Container/Container\";\nimport Filter from \"./components/Filter/Filter\";\nimport { getVisibleContacts } from \"./redux/app/app-selectors\";\n\n// import appActions from \"./redux/app/app-actions\";\nimport { useSelector } from \"react-redux\";\n\nexport default function App() {\n  const contacts = useSelector(getVisibleContacts);\n  const totalContactsCount = contacts.length;\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <p>Общее кол-во: {totalContactsCount}</p>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n// class App extends Component {\n//   filterArr = (fArr) => {\n//     let newArr = fArr.filter((cur) =>\n//       cur.name.toUpperCase().includes(this.props.filter)\n//     );\n//     return newArr;\n//   };\n\n//   render() {\n//     return (\n//       <Container>\n//         <div className=\"App\">\n//           <h1>Phonebook</h1>\n//           <ContactForm onSubmitData={this.props.formSubmitHandler} />\n//           <h1>Contacts</h1>\n//           <Filter setFilterToState={this.props.filterSet} />\n//           <ContactList\n//             contacts={this.filterArr(this.props.contacts)}\n//             del={this.props.contactDelete}\n//           />\n//           </div>\n//       </Container>\n//     );\n//   }\n// }\n// const mapStateToProps = (state) => ({\n//   contacts: state.app.contacts,\n//   filter: state.app.filter,\n// });\n// const mapDispatchToProrps = (dispatch) => ({\n//   formSubmitHandler: (contactData) =>\n//     dispatch(appActions.addContact(contactData)),\n//   contactDelete: (contactId) => dispatch(appActions.deleteContact(contactId)),\n//   filterSet: (str) => dispatch(appActions.filterSet(str)),\n// });\n// export default connect(mapStateToProps, mapDispatchToProrps)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact, changeFilter } from \"./app-actions\";\n\nconst initialContacts = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst items = createReducer(initialContacts, {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport phonebookReducer from \"./app/app-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport s from \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App className={s} />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store.store}>\n//       <PersistGate loading={null} persistor={store.persistor}>\n//         <App className={s} />\n//       </PersistGate>\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n"],"sourceRoot":""}